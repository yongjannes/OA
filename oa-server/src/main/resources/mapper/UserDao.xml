<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sf.demo.dao.UserDao">

    <resultMap id="userResultMap" type="com.sf.demo.model.User">

        <id property="u_id" column="u_id"/>
        <result property="u_name" column="u_name"/>
        <result property="u_type" column="u_type"/>
        <collection property="roleNameList" column="u_id" ofType="string" select="findRoleNameList"/>

    </resultMap>

    <select id="findRoleNameList" resultType="string">
        <!-- 根据用户账号查询，用户的角色名称 -->
        select ro.ro_name
        from t_ur ur
                join t_role ro on ur.ro_id = ro.ro_id
        where ur.u_id = #{id}
    </select>

    <select id="findUserList" resultMap="userResultMap">

        select
            u.u_id,
            u.u_name,
            case
                when instr(u.u_id,'U') = 1 and length(u.u_id) = 6 then 'normal'
                when exists(select e_id from t_emp where e_id = u.u_id) then 'emp'
                else 'inner'
            end u_type
        from t_user u
        <where>
            <if test="u_id != null and u_id != ''">
                instr(u.u_id,#{u_id}) > 0
            </if>
            <if test="u_name != null and u_name != ''">
                and instr(u.u_name,#{u_name}) > 0
            </if>
        </where>

    </select>

    <delete id="deleteUser">
        delete from t_user
        <where>
            <foreach collection="ids" item="id" separator="or" open="" close="">
                u_id = #{id}
            </foreach>
        </where>
    </delete>

    <select id="findAllRoleList" resultType="com.sf.demo.model.Role">
        select
            ro_id,ro_name
        from t_role
    </select>
    
    <insert id="insertUserRole">
        insert into t_ur(u_id,ro_id)
        values 
        <foreach collection="roleIds" item="roleId" separator=",">
            (#{userId},#{roleId})
        </foreach>
    </insert>

    <select id="findExistsRoles" resultType="boolean">
        select
            count(u_id)
        from t_ur
        where u_id in
            <foreach collection="userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
    </select>

    <select id="findAllNotNormalUsers" resultType="string">
        select u_id
        from t_user u
        where
            exists(select e_id from t_emp where e_id = u.u_id)
            or
            (not (instr(u.u_id,'U') = 1 and length(u.u_id) = 6))
    </select>



</mapper>